type Organization {
  login: String!
  billing: OrganizationBilling!
  plan: Plan
}

type Plan {
  name: String
  space: Int
  collaborators: Int
  privateRepos: Int
  filledSeats: Int
  seats: Int
}

type OrganizationBilling {
  actions: ActionBilling!
  storage: StorageBilling!
}

type StorageBilling {
  daysLeftInBillingCycle: Int!
  estimatedPaidStorageForMonth: Float!
  estimatedStorageForMonth: Int!
}

type ActionBilling {
  totalMinutesUsed: Int!
  totalPaidMinutesUsed: Float!
  includedMinutes: Int!
  minutedUsedBreakdown: ActionBillingBreakdown!
}

type ActionBillingBreakdown {
  total: Int
  macOS: ActionBillingBreakdownMacOS
  windows: ActionBillingBreakdownWindows
  ubuntu: ActionBillingBreakdownUbuntu
}

type ActionBillingBreakdownMacOS {
  total: Int
}

type ActionBillingBreakdownWindows {
  total: Int
}

type ActionBillingBreakdownUbuntu {
  total: Int
}

type Query {
  organization(login: String!): Organization
}
