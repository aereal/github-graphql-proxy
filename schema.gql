extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.0", import: ["@key", "@shareable", "@external"])

scalar Int64

scalar Time

extend type Organization @key(fields: "login") {
  login: String! @external
  billing: OrganizationBilling!
  plan: Plan
}

type Plan {
  name: String
  space: Int
  collaborators: Int
  privateRepos: Int
  filledSeats: Int
  seats: Int
}

type OrganizationBilling {
  actions: ActionBilling!
  storage: StorageBilling!
}

type StorageBilling {
  daysLeftInBillingCycle: Int!
  estimatedPaidStorageForMonth: Float!
  estimatedStorageForMonth: Int!
}

type ActionBilling {
  totalMinutesUsed: Int!
  totalPaidMinutesUsed: Float!
  includedMinutes: Int!
  minutedUsedBreakdown: ActionBillingBreakdown!
}

type ActionBillingBreakdown {
  total: Int
  macOS: ActionBillingBreakdownMacOS
  windows: ActionBillingBreakdownWindows
  ubuntu: ActionBillingBreakdownUbuntu
}

type ActionBillingBreakdownMacOS {
  total: Int
}

type ActionBillingBreakdownWindows {
  total: Int
}

type ActionBillingBreakdownUbuntu {
  total: Int
}

type Artifact {
  id: Int!
  name: String!
  sizeInBytes: Int!
  archiveDownloadURL: String!
  expired: Boolean!
  createdAt: Time!
  expiresAt: Time!
}

type RepositoryArtifactConnection {
  totalCount: Int!
  totalSizeInBytes: Int!
  nodes: [Artifact]!
}

extend type Repository @key(fields: "nameWithOwner") {
  nameWithOwner: String! @external
  artifacts(first: Int, page: Int): RepositoryArtifactConnection!
}

type Query {
  organization(login: String!): Organization @shareable
  repository(owner: String!, name: String!, followRenames: Boolean = true): Repository @shareable
}
